@using SkillCow.Classes.Cloud.TableStorage.PersonalityTests.SkillCowRequestSubmissions
@using Microsoft.WindowsAzure.StorageClient
@using Newtonsoft.Json.Linq
@using System.Text;
@using SkillCow.Classes.Helpers
@model SkillCowRequestSubmissionClient
@{
    ViewBag.Title = "Campaigns";
}

<script>
    function settoday() {
        $('#startdate').val('@(EasternTimeConverter.Convert(DateTime.UtcNow).ToString("yyyyMMdd"))');
        $('#enddate').val('@(EasternTimeConverter.Convert(DateTime.UtcNow).ToString("yyyyMMdd"))');
        document.forms[0].submit();
    }
    function setyesterday() {
        $('#startdate').val('@(EasternTimeConverter.Convert(DateTime.UtcNow).AddDays(-1).ToString("yyyyMMdd"))');
        $('#enddate').val('@(EasternTimeConverter.Convert(DateTime.UtcNow).AddDays(-1).ToString("yyyyMMdd"))');
        document.forms[0].submit();
    }

    var d = new Date()
    var n = d.getTimezoneOffset();
    
</script>
<div class="pagecontent rounded20" style="margin: 0 auto; background-color: rgba(255,255,255,0.5); text-align: center; padding: 20px;">
    
    @using (Html.BeginForm())
{
    <table style="font-style: italic;">
        <tr>
            <td>Start date:</td>
            <td><input type="text" id="startdate" name="startdate" value="@(ViewBag.StartDate.ToString("yyyyMMdd"))"/> </td>
        </tr>
        <tr>
            <td>End date:</td>
            <td><input type="text" id="enddate" name="enddate" value="@(ViewBag.EndDate.ToString("yyyyMMdd"))"/> </td>
            <td><input type="submit" value="Go"/></td>
            <td><input type="button" value="Today" onclick="settoday();"/></td>
            <td><input type="button" value="Yesterday" onclick="setyesterday();"/></td>
        </tr>
    </table>
    
}
</div>
@{
    int externalgradyearpass = 0;
    int externalcnt = 0;
    int externalleads = 0;
    int cnt = 0;
    
    Dictionary<string, int> topschools = new Dictionary<string, int>();
    
    List<SkillCowRequestSubmission> allrecords = new List<SkillCowRequestSubmission>();
    
    DateTime cursordate = ViewBag.StartDate;
    
    while(cursordate<=ViewBag.EndDate)
    {
        CloudTableQuery<SkillCowRequestSubmission> query = Model.ByCampaign(cursordate.ToString("yyyyMMdd"),"13564694");
        allrecords.AddRange(query.Execute().OrderBy(x => x.Timestamp));
        cursordate = cursordate.AddDays(1);
    }

    Dictionary<string, Dictionary<string, object>> summary = new Dictionary<string, Dictionary<string, object>>();

    Dictionary<string, int> totals = new Dictionary<string, int>();

    totals["Records"] = 0;
    totals["Leads"] = 0;
    
    
    foreach (var submission in allrecords)
    {
        string source = (submission.UtmSource != "" ? submission.UtmSource : "(direct)");
        string campaign = (submission.UtmSource != "" ? (submission.UtmSource.Contains("mgid") ? submission.UtmCampaign : "(all)") : "");
        string keyword = (submission.UtmSource != "" ? (submission.UtmSource.Contains("mgid") ? submission.UtmContent : (submission.advertise_terms_html_kw != null ? submission.advertise_terms_html_kw : "")) : "");
        string type = (submission.SourceForm == null || submission.SourceForm == "schoolform" ? "Leads" : "Records"); ;

        totals[type]++;
        
        string key = source + campaign + keyword;
             
            if(summary.ContainsKey(key))
            {
                summary[key][type] = (int)summary[key][type] + 1;
            }
            else
            {
                summary.Add(key, new Dictionary<string,object>());
                summary[key]["Source"] = source;
                summary[key]["Campaign"] = campaign;
                summary[key]["Content"] = keyword;
                summary[key]["Leads"] = 0;
                summary[key]["Records"] = 0;
                summary[key][type] = 1;
            }
    }

    IOrderedEnumerable<KeyValuePair<string, Dictionary<string, object>>> sorted = summary.OrderByDescending(x => ((double)(int)x.Value["Leads"] / ((int)x.Value["Records"] + (int)x.Value["Leads"]))
        * ((double)((int)x.Value["Records"] + (int)x.Value["Leads"]) / allrecords.Count));
}

<br />
<div class="pagecontent rounded20" style="margin: 0 auto; background-color: rgba(255,255,255,0.5); text-align: left; padding: 20px;">
    <h1>Stats by Source</h1>
    
    <br />
    <table>
        <tr>
            <th>Source</th>
            <th>Leads</th>
            <th>Records</th>
            <th>Ratio</th>
            <th>Size</th>
            <th>Weight</th>
        </tr>
        @foreach (KeyValuePair<string, Dictionary<string, object>> kv in sorted)
        {
            double ratio = ((double)(int)kv.Value["Leads"] / ((int)kv.Value["Records"] + (int)kv.Value["Leads"]));
            double size = ((double)((int)kv.Value["Records"] + (int)kv.Value["Leads"]) / allrecords.Count );
        <tr>
            <td>@(kv.Value["Source"].ToString())</td>
            <td align="right">@(kv.Value["Leads"].ToString())</td>
            <td align="right">@(kv.Value["Records"].ToString())</td>
            <td align="right">@String.Format("{0:0.00%}", ratio)</td>
            <td align="right">@String.Format("{0:0.00%}", size)</td>
            <td align="right">@String.Format("{0:0.00%}", ratio * size)</td>
        </tr>
        }

        <tr>
            <td></td>
            <td align="right"><b>@(((int)totals["Leads"]).ToString())</b></td>
            <td align="right"><b>@(((int)totals["Records"]).ToString())</b></td>
            <td align="right"></td>
            <td align="right"></td>
            <td align="right"></td>
        </tr>

    </table>
    
    
</div>

<br />

<div class="pagecontent rounded20" style="margin: 0 auto; background-color: rgba(255,255,255,0.5); text-align: left; padding: 20px;">
    <h1>All records</h1>
    
    <br />
    <table>
        <tr>
            <th>Source</th>
            <th>Campaign</th>
            <th>Content</th>
            <th>SourceForm</th>
        </tr>
        @foreach (var submission in allrecords)
        {
        <tr>
            <td>@(submission.UtmSource)</td>
            <td>@(submission.UtmCampaign)</td>
            <td>@(submission.UtmContent)</td>
            <td>@(submission.SourceForm)</td>
        </tr>
        }
    </table>
    
    
</div>
<style>
    th { text-align: left;}   
    td {padding: 0 10px 0 1px; color: #000;}
</style>