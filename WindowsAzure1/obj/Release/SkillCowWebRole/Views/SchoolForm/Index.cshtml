@{
    ViewBag.Title = "Index";
}

<div class="container" style="background-color: rgba(255,255,255,0.5)">

    <div style="padding: 20px;">
        
        
        <div id="customformcontainer">
            
        </div>

        <pre id="declarations">
        </pre>
        <pre id="code">
        </pre>

        <script id="formcode">
        
        </script>
    </div>
</div>
<style>
    #customformcontainer .logocontainer {position: relative; width: 500px; background-color: rgba(255,255,255,0.5); padding-bottom: 20px;}
    
    #customformcontainer .controlcontainer {position: relative; width: 500px; background-color: rgba(255,255,255,0.5); height: 35px; margin-bottom: 1px; }
    #customformcontainer .controlcontainer .label { position: absolute; width: 200px; left: 10px; top: 9px; font-size: 10pt; }
    #customformcontainer .controlcontainer .control { position: absolute; width: 300px; left: 210px; top: 0px; }
    #customformcontainer .controlcontainer .control input[type='text'] { font-size: 12pt; padding: 5px; width: 275px; color:#333; }
    #customformcontainer .controlcontainer .control select { font-size: 12pt; width: 287px; padding: 5px; color:#333; }
    
    #customformcontainer .textareacontainer {position: relative; width: 500px; background-color: rgba(255,255,255,0.5); margin-bottom: 1px; }
    #customformcontainer .textareacontainer .label { position: relative; left: 10px; font-size: 10pt; padding-top: 9px;}
    #customformcontainer .textareacontainer .control { position: relative; width: 200px;  padding: 9px;}
    #customformcontainer .textareacontainer .control textarea { font-family: Arial; font-size: 12pt; padding: 5px; width: 475px; color:#333; }
    
    #customformcontainer .checkboxcontainer {position: relative; width: 500px; background-color: rgba(255,255,255,0.5); margin-bottom: 1px; }
    #customformcontainer .checkboxcontainer .label { position: relative; left: 10px; font-size: 10pt; padding-top: 9px;max-width: 475px;}
    #customformcontainer .checkboxcontainer .control { position: relative; width: 200px;  padding: 9px;}
            
    #customformcontainer .fieldgroupcontainer {position: relative; width: 500px; background-color: rgba(255,255,255,0.5); margin-bottom: 1px; }
    #customformcontainer .fieldgroupcontainer .label { position: relative; left: 10px; font-size: 10pt; padding-top: 9px; max-width: 475px;}
    #customformcontainer .fieldgroupcontainer .control { position: relative; margin-left:200px;  padding: 9px;}
    #customformcontainer .fieldgroupcontainer .control select { font-size: 12pt; padding: 0px; color:#333; display: inline-block; padding: 5px;}
    
</style>

<script src="@Url.Content("~/Scripts/jtextarea/jtextarea.js?v=" + ViewBag.AppVersion)" type="text/javascript"></script>

<script>
    function submitCustomForm() {
        if (!validateCustomForm()) {
            return;
        }
        $('#customform').submit();
    }
</script>
<script>
    $(document).ready(function () {
        downloadForm();
    });

    function downloadForm() {
        $.ajax({
            url: appserverurl + "/SchoolForm/GetFormJson",
            type: "GET",
            data: {
                formid: "@(ViewBag.FormId)"
            }
        }).done(function (response) {
            if (response.result == 'ok') {
                createFormFromJson(response);
                createEventHandlers(response);

                createFormValidation(response);
                
                $('#zip').val(getCookie('zip'));
                $('#firstname').val(getCookie('firstname'));
                $('#phone').val(getCookie('phone'));
                $('#email').val(getCookie('email'));
                $('#educationlevel').val(getCookie('educationlevel'));
                

            }
            else {
                alert("Error");
            }
        }).fail(function () {
            alert("Error");
        });
    }

    function createFormValidation(json) {

        var code = '';

        code += 'function validateCustomForm() {\n';
           

        for (var i = 0; i < json.fields.length; i++) {
            var f = json.fields[i];
            switch (f.type) {
                case 'textarea':
                    
                    break;
                default:
                    if (f.required == 'true') {
                        code += 'if($("#' + f.name + '").val()=="") { alert("' + f.label + ' is required"); $("#' + f.name + '").focus(); return false; } \n';
                    }
                    break;
            }
        }
        code += '}\n';

        //$('#code').append(code);

        var headID = document.getElementsByTagName("head")[0];
        var newScript = document.createElement('script');
        newScript.type = 'text/javascript';
        newScript.innerHTML = code;

        headID.appendChild(newScript);
    }

    function createEventHandlers(json) {

        var declarations = '';
        var code = '';
        var eventBinders = '';

        
        for (var i = 0; i < json.controlevents.length; i++) {
            var ce = json.controlevents[i];

            code += 'function ' + ce.control + '_eventhandler() {\n' +
            'var controlvalue = $("#' + ce.control + '").val();\n\n';

            //Validation events first
            for (var j = 0; j < ce.events.length; j++) {
                if (ce.events[j].type == "validation") {
                    switch (ce.events[j].validation) {
                        case "zip":
                            code += 'if(!validateZip(controlvalue)) { alert("Invalid zip"); $("#' + ce.control + '").focus(); return; }\n';
                            break;
                        case "phone":
                            code += 'if(!validatePhone(controlvalue)) { alert("Invalid phone number"); $("#' + ce.control + '").focus(); return; }\n$("#' + ce.control + '").val(formatPhoneNumber(controlvalue));\n';
                            break;
                        case "email":
                            code += 'if(!validateEmail(controlvalue)) { alert("Invalid email address"); $("#' + ce.control + '").focus(); return; }\n';
                            break;
                        default: break;
                    }
                }
            }

            //Hiding events second
            for (var j = 0; j < ce.events.length; j++) {
                if (ce.events[j].type == "hiding") {
                    var e = ce.events[j];

                    declarations += 'var $' + e.valueVariable + ' = ' + (e.oper == 'in' ? '[' + e.value + ']' : '"' + e.value + '"') + ';\n';

                    if (e.oper == 'in') {
                        code += 'if(controlvalue=="" || $.inArray(controlvalue, $' + e.valueVariable + ')>=0) {\n' +
                        '$(".' + e.cssclass + '").' + e.actionIfTrue + '();\n' +
                        '}else{\n' +
                        (e.actionIfFalse !='' ? '$(".' + e.cssclass + '").' + e.actionIfFalse + '();\n' : '') +
                        '}\n\n';
                    }
                    else {
                        code += 'if(controlvalue=="" || controlvalue' + e.oper + '$' + e.valueVariable + ') {\n' +
                        /*'alert("' + e.actionIfTrue + ' .' + e.cssclass + '");\n' +*/
                        '$(".' + e.cssclass + '").' + e.actionIfTrue + '();\n' +
                        '}else{\n' +
                        /*'alert("' + e.actionIfFalse + ' .' + e.cssclass + '");\n' +*/
                        (e.actionIfFalse !='' ? '$(".' + e.cssclass + '").' + e.actionIfFalse + '();\n' : '') +
                    '}\n\n';
                    }
                }
            }

            code += '}\n';
        }
        
        //$('#declarations').append(declarations);
        //$('#code').append(code);
                
        var headID = document.getElementsByTagName("head")[0];
        var newScript = document.createElement('script');
        newScript.type = 'text/javascript';
        newScript.innerHTML = declarations + code;
        
        headID.appendChild(newScript);
    }

    function createFormFromJson(json) {
        var container = document.getElementById('customformcontainer');

        container.appendChild(createLogoSection(json.logourl));
        
        var form = document.createElement('form');
        form.setAttribute('id', 'customform');
        
        for (var i = 0; i < json.fields.length; i++) {
            var f = json.fields[i];
            switch(f.type) {
                case 'hidden':
                    form.appendChild(createHiddenField(f));
                    break;
                case 'text':
                    form.appendChild(createTextField(f));
                    break;
                case 'checkbox':
                    form.appendChild(createCheckboxField(f));
                    break;
                case 'textarea':
                    form.appendChild(createTextareaField(f));
                    break;
                case 'dropdown':
                    form.appendChild(createDropdownField(f));
                    break;
                case 'fieldgroup':
                    form.appendChild(createFieldgroupField(f));
                    break;
                default: break;
            }
        }

        var submit = document.createElement('input');
        submit.setAttribute('type', 'button');
        submit.setAttribute('value', 'Submit');
        submit.setAttribute('onclick', 'submitCustomForm();');
        form.appendChild(submit);

        container.appendChild(form);

        $('textarea').jtextarea();
    }

    function createHiddenField(f) {
        return createInput(f);
    }

    function createTextField(f) {
        var section = createControlSection();
        section.appendChild(createLabel(f));
        section.appendChild(createControlContainer(createInput(f, 'onchange=' + f.name + '_eventhandler()')));
        return section;
    }
    function createCheckboxField(f) {
        var section = createCheckboxSection();
        section.appendChild(createLabel(f));
        section.appendChild(createControlContainer(createCheckbox(f)));
        return section;
    }
    function createTextareaField(f) {
        var section = createTextareaSection();
        section.appendChild(createLabel(f));
        section.appendChild(createControlContainer(createTextarea(f)));
        return section;
    }
    function createFieldgroupField(f) {
        var section = createFieldgroupSection(f.cssclass);
        section.appendChild(createLabel(f));
        
        var cc = createControlContainer();

        for (var i = 0; i < f.options.length; i++) {
            if (f.options[i].type == 'radio') {
                cc.appendChild(createRadiobutton(f.options[i]));
                cc.appendChild(createElement('span', f.options[i].label));
            }
            else if (f.options[i].type == 'dropdown') {
                cc.appendChild(createDropdown(f.options[i], 'onchange=' + f.options[i].name + '_eventhandler()'));
            }
        }

        section.appendChild(cc);
        return section;
    }
    function createDropdownField(f) {
        var section = createControlSection();
        section.appendChild(createLabel(f));
        section.appendChild(createControlContainer(createDropdown(f, 'onchange=' + f.name + '_eventhandler()')));
        return section;
    }

    function createDropdown(f, attributes) {

        var element = document.createElement('select');
        element.setAttribute('name', f.name);
        element.setAttribute('id', f.name);

        if (attributes) {
            var tokens = attributes.split(',');
            for (var i = 0; i < tokens.length; i++) {
                var kv = tokens[i].split('=');
                if (kv.length > 1) {
                    for (var j = 0; j < kv.length; j++) {
                        element.setAttribute(kv[0], kv[1]);
                    }
                }
            }
        }

        var optgroups = createOptionGroups(f.options);

        
        var optionContainer;
        for (var g1 = 0; g1 < optgroups.length; g1++) {
            var group1 = optgroups[g1];
            var group1optgroup;
            optionContainer = element;
            if (group1.name != "") {
                group1optgroup = document.createElement('optgroup');
                group1optgroup.setAttribute('label', group1.name);
                optionContainer = group1optgroup;
            }

            if (group1.items.length > 0) {

                for (var i = 0; i < group1.items.length; i++) {
                    
                    var o = group1.items[i];
                    var option = document.createElement('option');
                    option.setAttribute('value', o.value);
                    option.setAttribute('class', o.cssclass);
                    option.setAttribute('style', o.style);
                    option.innerHTML = o.label;
                    optionContainer.appendChild(option);
                    
                }
            }


            for (var g2 = 0; g2 < group1.groups.length; g2++) {
                var group2 = group1.groups[g2];
                var group2optgroup = document.createElement('optgroup');
                group2optgroup.setAttribute('label', group2.name);
                for (var i = 0; i < group2.items.length; i++) {
                    var o = group2.items[i];
                    var option = document.createElement('option');
                    option.setAttribute('value', o.value);
                    option.setAttribute('class', o.cssclass);
                    option.setAttribute('style', o.style);
                    option.innerHTML = o.label;
                    group2optgroup.appendChild(option);
                }
                optionContainer.appendChild(group2optgroup);
            }

            if (group1optgroup != null) {
                element.appendChild(group1optgroup);
            }
        }
                
        return element;
    }

    function createOptionGroups(options) {
        var groups = new Array();

        for (var i = 0; i < options.length; i++) {
            var o = options[i];
            var group = getParentGroup(o, groups);

            group.items.push(o);
            
        }
        
        return groups;
    }
    function getParentGroup(option, groups) {

        if (option.group2!=null && option.group2 != "") {
            var group1 = getOrCreateGroupByName(option.group1, groups);
            return getOrCreateGroupByName(option.group2, group1.groups);
        }
        
        return getOrCreateGroupByName(option.group1, groups);
    }
    function getOrCreateGroupByName(groupname, groups) {
        
        for (var i = 0; i < groups.length; i++) {
            if ((groupname != null && groups[i].name == groupname) || (groupname == null && groups[i].name == "")) {
                return groups[i];
            }
        }
                
        var newGroup = { name: (groupname!=null?groupname:""), groups: new Array(), items: new Array() };
        
        groups.push(newGroup);
        
        return newGroup;
    }

    //common
    function createLogoSection(imageurl) {
        var div = document.createElement('div');
        div.setAttribute('class', 'logocontainer');
        var img = document.createElement('img');
        img.setAttribute('src', imageurl);
        div.appendChild(img);
        return div;
    }
    function createTextareaSection() {
        var div = document.createElement('div');
        div.setAttribute('class', 'textareacontainer');
        return div;
    }
    function createCheckboxSection() {
        var div = document.createElement('div');
        div.setAttribute('class', 'checkboxcontainer');
        return div;
    }
    function createFieldgroupSection(cssclass) {
        var div = document.createElement('div');
        div.setAttribute('class', 'fieldgroupcontainer ' + cssclass);
        return div;
    }
    function createControlSection() {
        var div = document.createElement('div');
        div.setAttribute('class', 'controlcontainer');
        return div;
    }
    function createInput(f, attributes) {
        var element = document.createElement('input');
        element.setAttribute('type', f.type);
        element.setAttribute('name', f.name);
        element.setAttribute('id', f.name);

        if(f.value!="text")
            element.setAttribute('value', f.value);

        if (attributes) {
            var tokens = attributes.split(',');
            for (var i = 0; i < tokens.length; i++) {
                var kv = tokens[i].split('=');
                if (kv.length > 1) {
                    for (var j = 0; j < kv.length; j++) {
                        element.setAttribute(kv[0], kv[1]);
                    }
                }
            }
        }

        return element;
    }
    function createTextarea(f) {
        var element = document.createElement('textarea');
        element.setAttribute('name', f.name);
        element.setAttribute('value', f.value);
        return element;
    }
    function createCheckbox(f) {
        var element = document.createElement('input');
        element.setAttribute('type', 'checkbox');
        element.setAttribute('name', f.name);
        element.setAttribute('value', f.value);
        if(f.selected=='true')
            element.setAttribute('checked', '');
        return element;
    }
    function createRadiobutton(f) {
        var element = document.createElement('input');
        element.setAttribute('type', 'radio');
        element.setAttribute('name', f.name);
        element.setAttribute('value', f.value);
        if (f.selected == 'true')
            element.setAttribute('checked', '');
        return element;
    }
    function createLabel(field) {
        var label = document.createElement('div');
        label.setAttribute('class', 'label');
        label.innerHTML = field.label + (field.required != null && $.trim(field.required).toLowerCase() == 'true' ? ' <span style="color: red;">*</span>' : '');
        return label;
    }
    function createElement(type, text, attributes) {
        var span = document.createElement(type);
        if (attributes) {
            var tokens = attributes.split(',');
            for (var i = 0; i < tokens.length; i++) {
                var kv = tokens[i].split('=');
                if (kv.length > 1) {
                    for (var j = 0; j < kv.length; j++) {
                        span.setAttribute(kv[0], kv[1]);
                    }
                }
            }
        }
        span.innerHTML = text;
        return span;
    }
    function createControlContainer(control) {
        var div = document.createElement('div');
        div.setAttribute('class', 'control');
        if(control){
            div.appendChild(control);
        }
        return div;
    }
</script>