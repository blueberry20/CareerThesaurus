@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <title>AgentReport</title>
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
    
    <script type="text/javascript" src="https://www.google.com/jsapi"></script>
    <script type="text/javascript">
        google.load("visualization", "1", { packages: ["corechart"] });
        //google.setOnLoadCallback(drawChart);
        function drawChart(agent, agentdata) {
            var data = google.visualization.arrayToDataTable(agentdata);
            var options = {
                title: agent + ' vs. The World',
                tooltip: { trigger: 'focus' },
                legend: { position: 'top', alignment: 'end' },
                colors: ['rgb(192,220,255)', 'rgb(255,220,220)', 'rgb(255,220,128)', 'red'],
                curveType: 'function',
                vAxis: { gridlines: { color: '#f5f5f5'} },
                pointSize: 5
            };

            var chart = new google.visualization.LineChart(document.getElementById('chart_div' + agent));
            chart.draw(data, options);
        }
    </script>


    <style>
        * {font-family: Arial;}
        td {padding: 1px 5px 1px 5px; vertical-align: top;}
        h1 {margin: 0 0 20px 0;}
        h2 {color: #000; }
        .rowlabel {text-align: right; font-size: 8pt; font-style: italic; font-weight: bold; padding-right: 20px;}
        .sectionlabel {text-align: left;}
        .sectionlabel h2 {font-size: 10pt; font-style: italic; font-weight: normal; margin: 10px 0 0 0;}
    
        .money {color: rgba(0,128,0, 1); text-align: right;}
        .company { color: rgba(0,128,255, 1);}
        .average {font-style: italic;}
        .worse { color: rgba(255,0,0, 1);}
        .better { color: rgba(0,0,0, 1);}
        .total {font-weight: bold;}
        .linetotal{font-weight: bold; text-align: right; padding-left: 20px;}
        .italic {font-style: italic; }
        table.linetotals {width: 300px; margin: 0; padding: 0;}
        table.linetotals td {text-align: right; margin: 0; padding: 0;}
        table.linetotals td.label { text-align: right; font-size: 8pt; width: 220px;}
        span {margin-right: 20px;}
        .small {font-size: 8pt;}
    </style>
</head>
<body>
    <div id="results"></div>
    <div id="export"></div>
</body>
</html>

<script type="text/javascript">

    $(document).ready(function () {
        runreport();
    });

</script>


<script type="text/javascript">
    var appserverurl = "@ViewBag.AppServerUrl";
    function runreport() {
        $('#results').html('');
        $.ajax({
            url: appserverurl + "/Dashboard/GetAgentPerformance",
            type: "POST",
            dataType: "json",
            data: {
                startdate: '@ViewBag.StartDate.ToString()',
                enddate: '@ViewBag.EndDate.ToString()'
            }
        }).success(function (response) {
            if (response.result == 'ok') {
                
                var sexport = '<table border=1><tr>' + 
                    '<td>agentid</td>' + 
                    '<td>totalhours</td>' + 
                    '<td>billablehours</td>' + 
                    '<td>TotalHourlyEarnings</td>' + 
                    '<td>TotalValidSchoolLeadsNetwork</td>' + 
                    '<td>TotalEarnings</td>' + 
                    '</tr>';
                for (var i = 0; i < response.agents.length; i++) {
                    var agent = response.agents[i];
                    var grid = getmatrixhtml(agent.Id, agent, agent.Dates);
                    $('#results').append('<div style="page-break-after: always">' +
                                         '<div><span style="font-size: 36pt;">' + agent.Id + '</span>' +
                                         '<span>efficiency:</span><span style="font-size: 36pt; color: rgb(' + parseInt(agent.Stochastic < 0.5 ? 155 + 100 - 100 * (agent.Stochastic / 0.5) : 0) + ',0,' + parseInt(agent.Stochastic > 0.5 ? 155 + 100 * ((agent.Stochastic - 0.5) / 0.5) : 0) + ')">' + (agent.Stochastic * 100).toFixed(0) + '%</span>' +
                                         '</div>' + grid + '</div>')

                    sexport += '<tr>' + 
                    '<td>'+agent.Id+'</td>' + 
                    '<td>'+agent.TotalHours+'</td>' + 
                    '<td>'+agent.TotalBillableHours+'</td>' + 
                    '<td>'+agent.TotalHourlyEarnings+'</td>' + 
                    '<td>'+agent.TotalValidSchoolLeadsNetwork+'</td>' + 
                    '<td>'+agent.TotalEarnings+'</td>' + 
                    '</tr>';
                }
                sexport += '</table>';

                for (var i = 0; i < response.agents.length; i++) {
                    var agent = response.agents[i];
                    drawChart(agent.Id, agent.ProductionChartData);
                }

                $('#export').html(sexport);


            }
        }).error(function (request, status, error) {
            alert(error.message);
        });
    }

    function getmatrixhtml(agentid, agent, dates) {
        var html = '<table style="text-align:center; font-size: 9pt;">';

        //-------------- HOURS HEADER -------------
        html += '<tr><td class="sectionlabel"><h2>Hours</h2></td></tr>';

        var numberofdaysshown = 0;

        //header
        html += '<tr>';
        html += '<td>...</th>';
        for (var i = 0; i < dates.length; i++) {
            if (dates[i].Hours > 0) {
                html += '<td style="font-size: 7pt; font-style: italic;">' + dates[i].Date + '</td>';
                numberofdaysshown++;
            }
        }
        
        html += '</tr>';


        //hours worked line
        html += '<tr>';
        html += '<td class="rowlabel">Hours Worked</td>';
        for (var i = 0; i < dates.length; i++) {
            if (dates[i].Hours > 0) {
                html += '<td><b>' + (dates[i].Hours > 0 ? dates[i].Hours.toFixed(1) : '') + '</b></td>';
            }
        }
        html += '<td><table class="linetotals" cellspacing=0 >' +
                '<tr><td class="label total">Total Hours:</td><td class="linetotal">' + blankzero(agent.TotalHours.toFixed(1)) + '</td></tr>' +
                '<tr><td class="label average">Daily Average:</td><td class="average">' + blankzero(agent.AvgHoursPerDay.toFixed(1)) + '</td></tr>' +
                '</table></td>';
        html += '</tr>';


        //Lunch hours
        html += '<tr>';
        html += '<td class="rowlabel">Lunch</td>';
        for (var i = 0; i < dates.length; i++) {
            if (dates[i].Hours > 0) {
                html += '<td class="small">' + (dates[i].Lunch > 0 ? dates[i].Lunch.toFixed(1) : '') + '</td>';
            }
        }
        html += '</tr>';

        //Billable hours
        html += '<tr>';
        html += '<td class="rowlabel">Billable Hours</td>';
        for (var i = 0; i < dates.length; i++) {
            if (dates[i].BillableHours > 0) {
                html += '<td><b>' + (dates[i].BillableHours > 0 ? dates[i].BillableHours.toFixed(1) : '') + '</b></td>';
            }
        }
        html += '<td><table class="linetotals" cellspacing=0 >' +
                '<tr><td class="label total">Total Billable Hours:</td><td class="linetotal">' + blankzero(agent.TotalBillableHours.toFixed(1)) + '</td></tr>' +
                '</table></td>';
        html += '</tr>';


        //Log on
        html += '<tr>';
        html += '<td class="rowlabel">Log on</td>';
        for (var i = 0; i < dates.length; i++) {
            if (dates[i].Hours > 0) {
                html += '<td style="font-size: 8pt; color: rgba(0,0,0,0.7)">' + dates[i].Logon + '</td>';
            }
        }
        html += '</tr>';

        //Log off
        html += '<tr>';
        html += '<td class="rowlabel">Log off</td>';
        for (var i = 0; i < dates.length; i++) {
            if (dates[i].Hours > 0) {
                html += '<td style="font-size: 8pt;  color: rgba(0,0,0,0.7)">' + dates[i].Logoff + '</td>';
            }
        }
        html += '</tr>';



        //----------- PRODUCTION SUMMARY Header -----------------------
        html += '<tr><td class="sectionlabel"><h2>Production Summary</h2></td></tr>';
        
        //Total Valid School Leads
        html += '<tr>';
        html += '<td class="rowlabel">Valid School Leads</td>';
        for (var i = 0; i < dates.length; i++) {
            if (dates[i].Hours > 0) {
                html += '<td><b>' + (dates[i].ValidSchoolLeadsNetwork > 0 ? dates[i].ValidSchoolLeadsNetwork : '') + '</td>';
            }
        }
        html += '<td><table class="linetotals" cellspacing=0 >' +
                '<tr><td class="label total">Total Network School Leads:</td><td class="linetotal">' + blankzero(agent.TotalValidSchoolLeadsNetwork) + '</td></tr>' +
                '<tr><td class="label average">Daily Average:</td><td class="average">' + blankzero(agent.AvgValidSchoolLeadsNetwork.toFixed(1)) + '</td></tr>' +
                '</table></td>';

        
        html += '</tr>';
        

        //----------- EARNINGS Header -----------------------
        html += '<tr><td class="sectionlabel"><h2>Earnings</h2></td></tr>';
        //hourly earnings
        html += '<tr>';
        html += '<td class="rowlabel">Hourly Earnings</td>';
        for (var i = 0; i < dates.length; i++) {
            if (dates[i].Hours > 0) {
                html += '<td class="money">' + (dates[i].HourlyEarnings > 0 ? '$' + dates[i].HourlyEarnings.toFixed(2) : '') + '</td>';
            }
        }
        html += '<td><table class="linetotals" cellspacing=0 >' +
                '<tr><td class="label total">Total Hourly Earnings:</td><td class="money">$' + blankzero(agent.TotalHourlyEarnings.toFixed(2)) + '</td></tr>' +
                '</table></td>';
        html += '</tr>';

        //Commission Earnings
        html += '<tr>';
        html += '<td class="rowlabel">Network School Lead Commissions</td>';
        for (var i = 0; i < dates.length; i++) {
            if (dates[i].Hours > 0) {
                html += '<td class="money">' + (dates[i].CommissionsSchoolLeadsNetwork > 0 ? '$' + dates[i].CommissionsSchoolLeadsNetwork.toFixed(2) : '') + '</td>';
            }
        }
        html += '<td><table class="linetotals" cellspacing=0 >' +
                '<tr><td class="label total">Total School Leads Commissions:</td><td class="money">$' + blankzero(agent.TotalCommissionCchoolLeadsNetwork.toFixed(2)) + '</td></tr>' +
                '</table></td>';
        html += '</tr>';

        //Total Earnings
        html += '<tr>';
        html += '<td class="rowlabel">Total Earnings</td>';
        for (var i = 0; i < dates.length; i++) {
            if (dates[i].Hours > 0) {
                html += '<td class="money total">' + (dates[i].TotalEarnings > 0 ? '$' + dates[i].TotalEarnings.toFixed(2) : '') + '</td>';
            }
        }
        html += '<td><table class="linetotals" cellspacing=0 >' +
                '<tr><td class="label total">Total Earnings:</td><td class="linetotal money">$' + blankzero(agent.TotalEarnings.toFixed(2)) + '</td></tr>' +
                '</table></td>';
        
        html += '</tr>';






        //------------ PRODUCTION BREAKDOWN HEADER -------------
        html += '<tr><td class="sectionlabel"><h2>Production Details</h2></td></tr>';

        html += '<tr>';
        html += '<td class="rowlabel">Valid Network School Leads</td>';
        for (var i = 0; i < dates.length; i++) {
            if (dates[i].Hours > 0) {
                html += '<td>' + (dates[i].ValidSchoolLeadsNetwork > 0 ? dates[i].ValidSchoolLeadsNetwork : '') + '</td>';
            }
        }
        html += '<td><table class="linetotals" cellspacing=0 >' +
                '<tr><td class="label total">Total Valid Network School Leads:</td><td class="linetotal">' + blankzero(agent.TotalValidSchoolLeadsNetwork) + '</td></tr>' +
                '</table></td>';

        html += '</tr>';

        html += '<tr>';
        html += '<td class="rowlabel">Company Total</td>';
        for (var i = 0; i < dates.length; i++) {
            if (dates[i].Hours > 0) {
                html += '<td class="company total">' + (dates[i].CompanyValidSchoolLeadsNetwork > 0 ? dates[i].CompanyValidSchoolLeadsNetwork : '') + '</td>';
            }
        }
        
        html += '</tr>';

        //Spacer row
        html += '<tr><td>&nbsp;</td></tr>';

        html += '<tr>';
        html += '<td class="rowlabel">Invalid Network School Leads</td>';
        for (var i = 0; i < dates.length; i++) {
            if (dates[i].Hours > 0) {
                html += '<td>' + (dates[i].InvalidSchoolLeadsNetwork > 0 ? dates[i].InvalidSchoolLeadsNetwork : '') + '</td>';
            }
        }
        html += '</tr>';

        html += '<tr>';
        html += '<td class="rowlabel">Company Total</td>';
        for (var i = 0; i < dates.length; i++) {
            if (dates[i].Hours > 0) {
                html += '<td class="company total">' + dates[i].CompanyInvalidSchoolLeadsNetwork + '</td>';
            }
        }
        html += '</tr>';







        //------------ LEAD RETENTION HEADER -------------
        html += '<tr><td class="sectionlabel"><h2>Student Lead Retention</h2></td></tr>';

        html += '<tr>';
        html += '<td class="rowlabel">Unique Students</td>';
        for (var i = 0; i < dates.length; i++) {
            if (dates[i].Hours > 0) {
                html += '<td>' + (dates[i].UniqueStudents > 0 ? dates[i].UniqueStudents : '') + '</td>';
            }
        }
        html += '</tr>';

        html += '<tr>';
        html += '<td class="rowlabel">Avg. Retention Rate</td>';
        for (var i = 0; i < dates.length; i++) {
            if (dates[i].Hours > 0) {
                html += '<td class="' + (dates[i].AvgRetentionSchoolLeads > dates[i].CompanyAvgRetentionSchoolLeads ? 'worse' : 'better') + '">' + (dates[i].AvgRetentionSchoolLeads > 0 ? dates[i].AvgRetentionSchoolLeads.toFixed(1) : '') + '</td>';
            }
        }
        html += '</tr>';

        html += '<tr>';
        html += '<td class="rowlabel">Company Average</td>';
        for (var i = 0; i < dates.length; i++) {
            if (dates[i].Hours > 0) {
                html += '<td class="company average">' + (dates[i].CompanyAvgRetentionSchoolLeads > 0 ? dates[i].CompanyAvgRetentionSchoolLeads.toFixed(1) : '') + '</td>';
            }
        }
        html += '</tr>';





        //------------ RELATIVE PERFORMANCE HEADER -------------
        html += '<tr><td class="sectionlabel"><h2>Relative Performance Rate - Leads/Hour</h2></td></tr>';

        html += '<tr>';
        html += '<td class="rowlabel">Company Best</td>';
        for (var i = 0; i < dates.length; i++) {
            if (dates[i].Hours > 0) {
                html += '<td class="company">' + (dates[i].CompanyAvgLPHMax > 0 ? dates[i].CompanyAvgLPHMax.toFixed(1) : '') + '</td>';
            }
        }
        html += '</tr>';

        html += '<tr>';
        html += '<td class="rowlabel">Company Mean</td>';
        for (var i = 0; i < dates.length; i++) {
            if (dates[i].Hours > 0) {
                html += '<td class="company">' + (dates[i].CompanyAvgLPHMean > 0 ? dates[i].CompanyAvgLPHMean.toFixed(1) : '') + '</td>';
            }
        }
        html += '</tr>';

        html += '<tr>';
        html += '<td class="rowlabel">Company Worst</td>';
        for (var i = 0; i < dates.length; i++) {
            if (dates[i].Hours > 0) {
                html += '<td class="company">' + (dates[i].CompanyAvgLPHMin > 0 ? dates[i].CompanyAvgLPHMin.toFixed(1) : '') + '</td>';
            }
        }
        html += '</tr>';

        html += '<tr>';
        html += '<td class="rowlabel">' + agentid + '</td>';
        for (var i = 0; i < dates.length; i++) {
            if (dates[i].Hours > 0) {
                html += '<td>' + (dates[i].AvgLPH > 0 ? dates[i].AvgLPH.toFixed(1) : '') + '</td>';
            }
        }
        html += '</tr>';

        html += '<tr>';
        html += '<td class="rowlabel">Production Chart</td>';
        html += '<td colspan="' + numberofdaysshown + '" style="text-align: left;"><br><div  id="chart_div' + agentid + '" style="height: 250px; width: 100%;"></div></td>';
        html += '</tr>';

        html += '</table>';
        return html;
    }

    function blankzero(value) {
        return (value > 0 ? value : '')
    }

</script>
